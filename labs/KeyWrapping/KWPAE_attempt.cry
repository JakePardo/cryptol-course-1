module labs::KeyWrapping::KWPAE_attempt where

import labs::KeyWrapping::NIST800_38f_Answers

import specs::Primitive::Symmetric::Cipher::Block::AES_parameterized as AES

widen a = 0 # a
shrink a = drop a

KWPAE_attempt :
    {k, l, n}
    (k > 0,
     k < 2^^32,
     l == 32 + 32 + (k*8) + (k*8) %^ 64,  // type of S
     n >= 3,                              // Lowerbound on n, from W
     64 >= width (6*(n-1)),               // Uppwerbound on n, from W
     64*n == max 192 l                    // Relate n and l
    ) =>
    ([128] -> [128]) -> [k*8] -> [l]
    
KWPAE_attempt CIPHk P = C
  where
    ICV2 = 0xA65959A6
    PBYTES = `k : [32]
    PAD = zero
    S = ICV2 # PBYTES # P # PAD : [l]
    C = if PBYTES <= 8 then
            widen (CIPHk (shrink S))
          else
            shrink (join (W`{n} CIPHk (split (widen S))))
